{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },

  "Hosting": {
    //Set to "true" the settings below if your hosting uses a load balancer. It'll be used to determine whether the current request is HTTPS
    "UseHttpClusterHttps": false,
    //Also set to "true" the next settings if you use a reverse proxy server (for example, if you host your site on Linux with Nginx/Apache and SSL) 
    "UseHttpXForwardedProto": false,

    //Use the setting below if your hosting doesn't use "X-FORWARDED-FOR" header to determine IP address.
    //In some cases server use other HTTP header. You can specify a custom HTTP header here. For example, CF-Connecting-IP, X-FORWARDED-PROTO, etc
    "ForwardedHttpHeader": ""
  },

  "devPlatform": {
    //Enable if you want to see the full error in production environment. It's ignored (always enabled) in development environment
    "DisplayFullErrorStack": false,

    //Windows Azure BLOB storage.
    //Specify your connection string, container name, end point for BLOB storage here
    "AzureBlobStorageConnectionString": "",
    "AzureBlobStorageContainerName": "",
    "AzureBlobStorageEndPoint": "",
    "AzureBlobStorageAppendContainerName": "true",

    //Windows Azure BLOB storage for Data Protection Keys (the UseRedisToStoreDataProtectionKeys option should be disabled)
    "UseAzureBlobStorageToStoreDataProtectionKeys": "false",
    //This should be a _PRIVATE_ container separate from the blob container used for media storage
    "AzureBlobStorageContainerNameForDataProtectionKeys": "",
    //Optionally encrypt the Data Protection Keys using an Azure Key Vault
    "AzureKeyVaultIdForDataProtectionKeys": "",

    //Redis support (used by web farms, Azure, etc). Find more about it at https://azure.microsoft.com/en-us/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache/
    "RedisEnabled": false,
    //Redis database id; If you need to use a specific redis database, just set its number here. Set empty if should use the different database for each data type (used by default); set -1 if you want to use the default database
    "RedisDatabaseId": "",
    "RedisConnectionString": "127.0.0.1:6379,ssl=False",
    "UseRedisToStoreDataProtectionKeys": false,
    "UseRedisForCaching": false,
    //Should we ignore Redis timeout exception? Enabling this setting increases Redis cache stability but may decrease site performance
    "IgnoreRedisTimeoutException": false,
    "UseRedisToStorePluginsInfo": false,

    //You can get the latest version of user agent strings at http://browscap.org/
    //Leave "CrawlersOnlyDatabasePath" attribute empty if you want to use full version of "browscap.xml" file
    "UserAgentStringsPath": "~/App_Data/browscap.xml",
    "CrawlerOnlyUserAgentStringsPath": "~/App_Data/browscap.crawlersonly.xml",

    //Do not edit this element. For advanced users only
    "DisableSampleDataDuringInstallation": false,
    "PluginsIgnoredDuringInstallation": "",

    //Enable if you want to clear /Plugins/bin directory on application startup
    "ClearPluginShadowDirectoryOnStartup": true,
    //Enable if you want to copy "locked" assemblies from /Plugins/bin directory to temporary subdirectories on application startup
    "CopyLockedPluginAssembilesToSubdirectoriesOnStartup": false,
    //Enable if you want to copy plugins library to the /Plugins/bin directory on application startup
    "UsePluginsShadowCopy": true,
    //Enable if you want to load an assembly into the load-from context, by passing some security checks
    "UseUnsafeLoadAssembly": true,

    //Configures the wait time (in seconds) before terminating the attempt to execute a command and generating an error.
    //Set null to use default value (30 seconds)
    "SQLCommandTimeout": null,

    //Enable to store TempData in the session state
    "UseSessionStateTempDataProvider": false
  },

  "AllowedHosts": "*"
}
